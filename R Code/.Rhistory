employment_rate+
public_transport_accessibility,
data = TrafficaccidentnumberSP,
coords=coordsWSP,
adapt=GWRbandwidth,
hatmatrix=TRUE,
se.fit=TRUE)
gwr.model
results <- as.data.frame(gwr.model$SDF)
names(results)
Trafficaccidentnumber2 <- Trafficaccidentnumber %>%
mutate(coefEmployment = results$employment_rate,
coefTransport = results$public_transport_accessibility)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.5)
## standard error-------------------------------------------------------------
#run the significance test
sigTest = abs(gwr.model$SDF$"public_transport_accessibility")-2 * gwr.model$SDF$"public_transport_accessibility_se"
Trafficaccidentnumber2 <- Trafficaccidentnumber2 %>%
mutate(GWREmploymentSig = sigTest)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "GWREmploymentSig",
palette = "RdYlBu")
Trafficaccidentnumber2 <- Trafficaccidentnumber %>%
mutate(coefEmployment = results$employment_rate,
coefTransport = results$public_transport_accessibility)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.5)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.1)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.5)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefTransport",
palette = "RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "Reds",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "Blue",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "Blues",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "BuRd",
alpha = 0.9)
tmaptools::palette_explorer()
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "revRdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = rev("RdBu"),
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "-RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefTransport",
palette = "-RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefTransport",
palette = "RdBu",
alpha = 0.9)
gwr.model = gwr(all_accidents^-0.75 ~
employment_rate+
public_transport_accessibility,
data = TrafficaccidentnumberSP,
coords=coordsWSP,
adapt=GWRbandwidth,
hatmatrix=TRUE,
se.fit=TRUE)
gwr.model
summary(model3)
lm.LMtests
sigTest
sigTest1 = abs(gwr.model$SDF$"employment_rate")-2 * gwr.model$SDF$"employment_rate_se"
sigTest1
summary(model3)
tmap_mode("view")
tm_shape(Trafficaccidentnumber) +
tm_polygons("model3resids",
palette = "RdYlBu")
parliamentaryconstituencies <- st_read("https://github.com/RuoxuanHong/GISAssessment/blob/main/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?raw=true")%>%
st_transform(., 27700)
library(sf)
library(tmap)
library(tmaptools)
library(tidyverse)
library(car)
library(janitor)
library(tidymodels)
library(spatialreg)
library(spgwr)
library(spdep)
library(RColorBrewer)
parliamentaryconstituencies <- st_read("https://github.com/RuoxuanHong/GISAssessment/blob/main/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?raw=true")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://github.com/RuoxuanHong/GISAssessment/blob/main/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?raw=true")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://github.com/RuoxuanHong/GISAssessment/blob/main/Parliamentary_Constituencies/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://github.com/RuoxuanHong/GISAssessment/blob/main/Parliamentary_Constituencies/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?raw=true")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://liveuclac-my.sharepoint.com/:u:/r/personal/ucfnrho_ucl_ac_uk/Documents/Westminster_Parliamentary_Constituencies/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?csf=1&web=1&e=NHyXTp")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://liveuclac-my.sharepoint.com/:u:/r/personal/ucfnrho_ucl_ac_uk/Documents/Westminster_Parliamentary_Constituencies/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?csf=1&web=1&e=JvJj4G")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://liveuclac-my.sharepoint.com/:u:/r/personal/ucfnrho_ucl_ac_uk/Documents/Westminster_Parliamentary_Constituencies/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?csf=1&web=1&e=JvJj4G")%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read("https://github.com/RuoxuanHong/GISAssessment/blob/main/Parliamentary_Constituencies/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp?raw=true")%>%
st_transform(., 27700)
temp <- tempfile()
download.file("https://github.com/RuoxuanHong/GISAssessment/blob/main/Westminster_Parliamentary_Constituencies.zip?raw=true",temp)
parliamentaryconstituencies <- st_read(unz(temp, "Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read(unz(temp, "Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))%>%
st_transform(., 27700)
parliamentaryconstituencies <- st_read(unz(temp, "Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))%>%
st_transform(., 27700)
unzip(temp, files = NULL)
temp
PCdata <- st_read(C:\\Users\\ruoxu\\AppData\\Local\\Temp\\RtmpAdqYIE\\file54a46797250, "Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))%>%
st_transform(., 27700)
## load map----------------------------------------------------------------------
# load parliamentary constituencies map uk
url <-"https://github.com/RuoxuanHong/GISAssessment/blob/main/Westminster_Parliamentary_Constituencies.zip?raw=true"
temp <- tempfile()
temp2 <- tempfile()
download.file(url, temp)
unzip(zipfile = temp, exdir = temp2)
parliamentaryconstituencies <- st_read(file.path(temp2, "Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))
url <-"https://github.com/RuoxuanHong/GISAssessment/blob/main/Westminster_Parliamentary_Constituencies__December_2015__Boundaries.zip?raw=true"
temp <- tempfile()
temp2 <- tempfile()
download.file(url, temp)
unzip(zipfile = temp, exdir = temp2)
parliamentaryconstituencies <- st_read(file.path(temp2, "Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))
library(sf)
library(tmap)
library(tmaptools)
library(tidyverse)
library(car)
library(janitor)
library(tidymodels)
library(spatialreg)
library(spgwr)
library(spdep)
library(RColorBrewer)
library(here)
parliamentaryconstituencies <- st_read(here::here("Westminster_Parliamentary_Constituencies",
"Westminster_Parliamentary_Constituencies__December_2015__Boundaries.shp"))%>%
st_transform(., 27700)
qtm(parliamentaryconstituencies)
londonparliamentaryconstituenciesmap <- parliamentaryconstituencies %>%
dplyr::filter(str_detect(pcon15cd, "E14000540")|
str_detect(pcon15cd, "E14000549")|
str_detect(pcon15cd, "E14000551")|
str_detect(pcon15cd, "E14000553")|
str_detect(pcon15cd, "E14000555")|
str_detect(pcon15cd, "E14000558")|
str_detect(pcon15cd, "E14000591")|
str_detect(pcon15cd, "E14000592")|
str_detect(pcon15cd, "E14000593")|
str_detect(pcon15cd, "E14000604")|
str_detect(pcon15cd, "E14000615")|
str_detect(pcon15cd, "E14000621")|
str_detect(pcon15cd, "E14000629")|
str_detect(pcon15cd, "E14000634")|
str_detect(pcon15cd, "E14000636")|
str_detect(pcon15cd, "E14000639")|
str_detect(pcon15cd, "E14000654")|
str_detect(pcon15cd, "E14000655")|
str_detect(pcon15cd, "E14000656")|
str_detect(pcon15cd, "E14000657")|
str_detect(pcon15cd, "E14000673")|
str_detect(pcon15cd, "E14000674")|
str_detect(pcon15cd, "E14000675")|
str_detect(pcon15cd, "E14000676")|
str_detect(pcon15cd, "E14000679")|
str_detect(pcon15cd, "E14000687")|
str_detect(pcon15cd, "E14000690")|
str_detect(pcon15cd, "E14000691")|
str_detect(pcon15cd, "E14000692")|
str_detect(pcon15cd, "E14000696")|
str_detect(pcon15cd, "E14000701")|
str_detect(pcon15cd, "E14000703")|
str_detect(pcon15cd, "E14000718")|
str_detect(pcon15cd, "E14000720")|
str_detect(pcon15cd, "E14000721")|
str_detect(pcon15cd, "E14000726")|
str_detect(pcon15cd, "E14000727")|
str_detect(pcon15cd, "E14000731")|
str_detect(pcon15cd, "E14000732")|
str_detect(pcon15cd, "E14000737")|
str_detect(pcon15cd, "E14000741")|
str_detect(pcon15cd, "E14000750")|
str_detect(pcon15cd, "E14000751")|
str_detect(pcon15cd, "E14000752")|
str_detect(pcon15cd, "E14000759")|
str_detect(pcon15cd, "E14000760")|
str_detect(pcon15cd, "E14000763")|
str_detect(pcon15cd, "E14000764")|
str_detect(pcon15cd, "E14000768")|
str_detect(pcon15cd, "E14000770")|
str_detect(pcon15cd, "E14000787")|
str_detect(pcon15cd, "E14000788")|
str_detect(pcon15cd, "E14000789")|
str_detect(pcon15cd, "E14000790")|
str_detect(pcon15cd, "E14000823")|
str_detect(pcon15cd, "E14000869")|
str_detect(pcon15cd, "E14000872")|
str_detect(pcon15cd, "E14000882")|
str_detect(pcon15cd, "E14000887")|
str_detect(pcon15cd, "E14000896")|
str_detect(pcon15cd, "E14000900")|
str_detect(pcon15cd, "E14000906")|
str_detect(pcon15cd, "E14000978")|
str_detect(pcon15cd, "E14000984")|
str_detect(pcon15cd, "E14000998")|
str_detect(pcon15cd, "E14001002")|
str_detect(pcon15cd, "E14001005")|
str_detect(pcon15cd, "E14001007")|
str_detect(pcon15cd, "E14001008")|
str_detect(pcon15cd, "E14001013")|
str_detect(pcon15cd, "E14001032")|
str_detect(pcon15cd, "E14001036")|
str_detect(pcon15cd, "E14001040"))%>%
st_transform(., 27700)
qtm(londonparliamentaryconstituenciesmap)
Trafficaccidentprofile <- read_csv("traffic_accident_data.csv",
col_names = TRUE,
locale = locale(encoding = 'Latin1'))
Trafficaccidentnumber <- londonparliamentaryconstituenciesmap%>%
left_join(.,
Trafficaccidentprofile,
by = c("pcon15cd" = "Ons code"))
tmap_mode("view")
qtm(Trafficaccidentnumber,
fill = "all_accidents",
borders = NULL,
fill.palette = "Blues")
Trafficaccidentnumber <- Trafficaccidentnumber %>%
clean_names()
ggplot(Trafficaccidentnumber, aes(x=all_accidents)) +
geom_histogram(aes(y = ..density..),
binwidth = 100) +
geom_density(colour="red",
size=1,
adjust=1)
Trafficaccidentnumber <- Trafficaccidentnumber %>%
clean_names()
ggplot(Trafficaccidentnumber, aes(x=all_accidents)) +
geom_histogram(aes(y = ..density..),
binwidth = 100) +
geom_density(colour="red",
size=1,
adjust=1)
symbox(~all_accidents,
Trafficaccidentnumber,
na.rm=T,
powers=seq(-3,3,by=.25))
coordsW <- Trafficaccidentnumber%>%
st_centroid()%>%
st_geometry()
plot(coordsW)
LWard_nb <- Trafficaccidentnumber %>%
poly2nb(., queen=T)
knn_wards <-coordsW %>%
knearneigh(., k=4)
LWard_knn <- knn_wards %>%
knn2nb()
plot(LWard_nb, st_geometry(coordsW), col="red")
plot(LWard_knn, st_geometry(coordsW), col="blue")
plot(LWard_nb, st_geometry(coordsW), col="red")
plot(Trafficaccidentnumber,max.plot = 14)
ggplot(Trafficaccidentnumber, aes((x=all_accidents)^-0.75) )+
geom_histogram(aes(y = ..density..),
binwidth = 0.003) +
geom_density(colour="red",
size=1,
adjust=1)
coordsW <- Trafficaccidentnumber%>%
st_centroid()%>%
st_geometry()
plot(coordsW)
Lward.knn_4_weight <- LWard_knn %>%
nb2listw(., style="C")
Trafficaccidentnumbermoran <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(all_accidents)%>%
pull()%>%
moran.test(., Lward.knn_4_weight)
Trafficaccidentnumbermoran
TrafficaccidentnumberGeary <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(all_accidents)%>%
pull()%>%
geary.test(., Lward.knn_4_weight)
TrafficaccidentnumberGeary
TrafficaccidentnumberG <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(all_accidents)%>%
pull()%>%
globalG.test(., Lward.knn_4_weight)
TrafficaccidentnumberG
Trafficaccidentnumberlocalmoran <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(all_accidents)%>%
pull()%>%
localmoran(., Lward.knn_4_weight)%>%
as_tibble()
Trafficaccidentnumberlocalmoran
Trafficaccidentnumber <- Trafficaccidentnumber %>%
mutate(all_accidents_I = as.numeric(Trafficaccidentnumberlocalmoran$Ii))%>%
mutate(all_accidents_Iz =as.numeric(Trafficaccidentnumberlocalmoran$Z.Ii))
# set the breaks
breaks1<-c(-1000,-2.58,-1.96,-1.65,1.65,1.96,2.58,1000)
MoranColours<- rev(brewer.pal(8, "RdGy"))
tm_shape(Trafficaccidentnumber) +
tm_polygons("all_accidents_Iz",
style="fixed",
breaks=breaks1,
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Traffic Accidents in London")
TrafficaccidentnumberGi <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(all_accidents)%>%
pull()%>%
localG(., Lward.knn_4_weight)
TrafficaccidentnumberGi
Trafficaccidentnumber <- Trafficaccidentnumber %>%
mutate(all_accidents_G = as.numeric(TrafficaccidentnumberGi))
GIColours<- rev(brewer.pal(8, "RdBu"))
tm_shape(Trafficaccidentnumber) +
tm_polygons("all_accidents_G",
style="fixed",
breaks=breaks1,
palette=GIColours,
midpoint=NA,
title="Gi*, Traffic Accidents in London")
Regressiondata<- Trafficaccidentnumber%>%
clean_names()%>%
dplyr::select(all_accidents,
cars_per_household,
travel_by_bicycle_to_work,
employment_rate,
public_transport_accessibility,
population_density,
area_of_road)
model1 <- Regressiondata %>%
lm(all_accidents^-0.75 ~
cars_per_household+
travel_by_bicycle_to_work+
employment_rate+
public_transport_accessibility+
population_density+
area_of_road,
data=.)
summary(model1)
# vif test
vif(model1)
model2 <- Regressiondata %>%
lm(all_accidents^-0.75 ~
cars_per_household+
travel_by_bicycle_to_work+
employment_rate+
public_transport_accessibility,
data=.)
summary(model2)
model3 <- Regressiondata %>%
lm(all_accidents^-0.75 ~
employment_rate+
public_transport_accessibility,
data=.)
summary(model3)
# lagrange Multiplier Diagnostics
lm.LMtests(model3,Lward.knn_4_weight, zero.policy=NULL, test="all", spChk=NULL, naSubset=TRUE)
par(mfrow=c(2,2))
plot(model3)
DW <- durbinWatsonTest(model3)
tidy(DW)
model_data3 <- model3 %>%
augment(., Regressiondata)
Trafficaccidentnumber <- Trafficaccidentnumber %>%
mutate(model3resids = residuals(model3))
tmap_mode("view")
tm_shape(Trafficaccidentnumber) +
tm_polygons("model3resids",
palette = "RdYlBu")
Nearest_neighbour <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(model3resids)%>%
pull()%>%
moran.test(., Lward.knn_4_weight)%>%
tidy()
Nearest_neighbour
slag_dv_model3_knn4 <- lagsarlm(all_accidents^-0.75 ~
employment_rate+
public_transport_accessibility,
data=Trafficaccidentnumber,
nb2listw(LWard_knn,
style="C"),
method = "eigen")
summary(slag_dv_model3_knn4)
# lagrange Multiplier Diagnostics
lm.LMtests(KNN4Moran,Lward.knn_4_weight, zero.policy=NULL, test="all", spChk=NULL, naSubset=TRUE)
Trafficaccidentnumber <- Trafficaccidentnumber %>%
mutate(slag_dv_model3_knn_resids = residuals(slag_dv_model3_knn4))
KNN4Moran <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(slag_dv_model3_knn_resids)%>%
pull()%>%
moran.test(., Lward.knn_4_weight)%>%
tidy()
KNN4Moran
sem_model1 <- errorsarlm(all_accidents^-0.75 ~
employment_rate+
public_transport_accessibility,
data=Trafficaccidentnumber,
nb2listw(LWard_knn, style="C"),
method = "eigen")
tidy(sem_model1)
summary(sem_model1)
Trafficaccidentnumber <- Trafficaccidentnumber %>%
mutate(sem_model1 = residuals(sem_model1))
KNN4Moranerr <- Trafficaccidentnumber %>%
st_drop_geometry()%>%
dplyr::select(sem_model1)%>%
pull()%>%
moran.test(., Lward.knn_4_weight)%>%
tidy()
KNN4Moranerr
st_crs(Trafficaccidentnumber) = 27700
TrafficaccidentnumberSP <- Trafficaccidentnumber %>%
as(., "Spatial")
st_crs(coordsW) = 27700
coordsWSP <- coordsW %>%
as(., "Spatial")
coordsWSP
GWRbandwidth <- gwr.sel(all_accidents^-0.75 ~
employment_rate+
public_transport_accessibility,
data = TrafficaccidentnumberSP,
coords=coordsWSP,
adapt=T)
gwr.model = gwr(all_accidents^-0.75 ~
employment_rate+
public_transport_accessibility,
data = TrafficaccidentnumberSP,
coords=coordsWSP,
adapt=GWRbandwidth,
hatmatrix=TRUE,
se.fit=TRUE)
#print the results of the model
gwr.model
results <- as.data.frame(gwr.model$SDF)
names(results)
Trafficaccidentnumber2 <- Trafficaccidentnumber %>%
mutate(coefEmployment = results$employment_rate,
coefTransport = results$public_transport_accessibility)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefEmployment",
palette = "-RdBu",
alpha = 0.9)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "coefTransport",
palette = "RdBu",
alpha = 0.9)
sigTest = abs(gwr.model$SDF$"public_transport_accessibility")-2 * gwr.model$SDF$"public_transport_accessibility_se"
sigTest1 = abs(gwr.model$SDF$"employment_rate")-2 * gwr.model$SDF$"employment_rate_se"
Trafficaccidentnumber2 <- Trafficaccidentnumber2 %>%
mutate(GWREmploymentSig = sigTest)
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "GWREmploymentSig",
palette = "RdYlBu")
sigTest
tm_shape(Trafficaccidentnumber2) +
tm_polygons(col = "GWREmploymentSig",
palette = "RdYlBu")
sigTest
sigTest1
